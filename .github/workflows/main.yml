name: Refresh Excel Pivot on OneDrive

on:
  schedule:
    - cron: "0 2 * * *"  # ch·∫°y l√∫c 9h s√°ng gi·ªù VN (UTC+7)
  workflow_dispatch:      # cho ph√©p b·∫•m Run th·ªß c√¥ng

jobs:
  refresh:
    runs-on: ubuntu-latest

    steps:
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install openpyxl requests

      - name: Run refresh script (all Excel files)
        env:
          TENANT_ID: ${{ secrets.TENANT_ID }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          FOLDER_PATH: ${{ secrets.FOLDER_PATH }}
        run: |
          python - <<'PYCODE'
          import io, os, requests
          from openpyxl import load_workbook

          TENANT_ID = os.environ["TENANT_ID"]
          CLIENT_ID = os.environ["CLIENT_ID"]
          CLIENT_SECRET = os.environ["CLIENT_SECRET"]
          FOLDER_PATH = os.environ["FOLDER_PATH"].rstrip("/")

          # üîê L·∫•y access token t·ª´ Entra (Azure AD)
          token_url = f"https://login.microsoftonline.com/{TENANT_ID}/oauth2/v2.0/token"
          token_data = {
              "grant_type": "client_credentials",
              "client_id": CLIENT_ID,
              "client_secret": CLIENT_SECRET,
              "scope": "https://graph.microsoft.com/.default"
          }
          token = requests.post(token_url, data=token_data).json()["access_token"]
          headers = {"Authorization": f"Bearer {token}"}

          # üìÇ Li·ªát k√™ t·∫•t c·∫£ file trong th∆∞ m·ª•c OneDrive
          list_url = f"https://graph.microsoft.com/v1.0/me/drive/root:{FOLDER_PATH}:/children"
          files = requests.get(list_url, headers=headers).json().get("value", [])

          if not files:
              print("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y file n√†o trong th∆∞ m·ª•c:", FOLDER_PATH)
              exit()

          # üß© L·∫∑p qua t·ª´ng file .xlsx
          for f in files:
              name = f["name"]
              if not name.lower().endswith(".xlsx"):
                  continue

              print(f"\nüì• ƒêang x·ª≠ l√Ω file: {name}")
              file_url = f"https://graph.microsoft.com/v1.0/me/drive/root:{FOLDER_PATH}/{name}:/content"

              try:
                  # üì• T·∫£i file
                  excel_bytes = requests.get(file_url, headers=headers).content
                  wb = load_workbook(io.BytesIO(excel_bytes), data_only=False)

                  # üîÑ Refresh Pivot Cache
                  refreshed = False
                  for sheet in wb.worksheets:
                      if hasattr(sheet, "_pivots"):
                          for pivot in sheet._pivots:
                              pivot.cache.refreshOnLoad = True
                              refreshed = True
                  if refreshed:
                      print(f"‚úÖ ƒê√£ b·∫≠t refreshOnLoad cho: {name}")
                  else:
                      print(f"‚ÑπÔ∏è Kh√¥ng t√¨m th·∫•y PivotTable trong {name}")

                  # üíæ Upload l·∫°i file (ghi ƒë√®)
                  buffer = io.BytesIO()
                  wb.save(buffer)
                  buffer.seek(0)
                  requests.put(file_url, headers=headers, data=buffer)
                  print(f"üì§ ƒê√£ l∆∞u l·∫°i file {name} l√™n OneDrive.\n")

              except Exception as e:
                  print(f"‚ùå L·ªói khi x·ª≠ l√Ω {name}: {e}")

          print("üèÅ Ho√†n t·∫•t x·ª≠ l√Ω t·∫•t c·∫£ c√°c file Excel.")
          PYCODE
